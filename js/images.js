// Generated by CoffeeScript 1.7.1

/*
  images.coffee pour School Phenomenon
  @author: Ophir LOJKINE
  Gestion de l’ajout de logos personnalisés
 */

(function() {
  var TAILLE_IMAGE_MAX, URL;

  TAILLE_IMAGE_MAX = 5e6;

  URL = window.URL || window.webkitURL | {};

  if (URL.createObjectURL == null) {
    alert("Votre navigateur ne permet pas la lecture de fichiers locaux.\nVous ne pourrez pas placer dynamiquement les images de personnalisation de vos sweats.\nSi vous souhaitez avoir cette possibilité, visitez cette page depuis une version récente de Firefox ou Chrome.");
  }

  $(".image-personnalisation").change(function(e) {
    var $imagezone, $inputs, bloburl, file, imgId, input;
    input = e.target;
    $inputs = $(input).parent();
    imgId = $inputs.data("imgId");
    file = e.target.files[0];
    bloburl = URL.createObjectURL(file);
    if (file.size > TAILLE_IMAGE_MAX) {
      alert("Fichier trop volumineux. Taille maximale autorisée : " + (TAILLE_IMAGE_MAX / 1e6) + "Mo");
      input.value = "";
    }
    $imagezone = $($inputs.data("zone-personnalisation"));
    if (imgId) {
      $('#' + imgId).remove();
    } else {
      imgId = "image-perso-deplacable-" + parseInt(Math.random() * 1e6);
    }
    $("<img>").attr('id', imgId).attr('alt', file.name).attr('src', bloburl).attr('class', 'image-perso-deplacable').width(80).height("auto").error(function() {
      return alert("Impossible de lire l’image.");
    }).detach().appendTo($imagezone).one('load', function() {
      return $(this).resizable({
        containment: "parent",
        aspectRatio: true,
        stop: function() {
          var $this;
          $this = $(this);
          $inputs.find('.w').val($this.width());
          return $inputs.find('.h').val($this.height());
        }
      }).parent().draggable({
        containment: "parent",
        cursor: "move",
        stop: function() {
          var $this, x, y;
          $this = $(this);
          x = $this.position().left / $this.parent().width();
          y = $this.position().top / $this.parent().height();
          $inputs.find('.x').val(x);
          return $inputs.find('.y').val(y);
        }
      }).css({
        top: 0,
        left: 0
      });
    });
    $inputs.data("imgId", imgId);
    if ($inputs.is(':last-child')) {
      return $inputs.clone(true).data('imgId', '').appendTo($inputs.parent()).find("input").val('');
    }
  });

}).call(this);

//# sourceMappingURL=images.map
